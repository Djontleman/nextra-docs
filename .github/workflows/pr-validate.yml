name: PR Validate

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  deploy-preview-environment:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    env:
      tfcWorkspaceName: nextra-docs-${{ github.event.number }}
      tfcOrg: jhutchinson531
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.5.1
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}

      - name: Terraform Init, create TFC workspace
        id: init-workspace
        run: |
          sed -i 's/name = "nextra-docs"/name = "'$tfcWorkspaceName'"/' main.tf
          terraform init -input=false

      - name: Build and deploy preview environment
        id: build-deploy-preview-environment
        run: |
          terraform apply --auto-approve -var is_prod=${{ vars.IS_VERCEL_PROD }}

      - name: Terraform Output
        # id: output
        run: |
          terraform output -no-color
        continue-on-error: true

      - name: Terraform Output
        id: output
        run: |
          OUTPUT=$(terraform output preview_url)
          echo $OUTPUT

      # - name: Create comment with Terraform output
      #   uses: actions/github-script@v6.4.1
      #   env:
      #     OUTPUT: '${{ steps.output.outputs.stdout }}'
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Preview Environment Outputs ðŸ–Œ
      #       \`\`\`
      #       ${process.env.OUTPUT}
      #       \`\`\`
      #       `
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
