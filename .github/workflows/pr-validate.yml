name: PR Validate

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  deploy-preview-environment:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    env:
      tfcWorkspaceName: nextra-docs-${{ github.event.number }}
      tfcOrg: jhutchinson531
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.5.1
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}

      - name: Terraform Init, create TFC workspace
        id: init-workspace
        run: |
          sed -i 's/name = "nextra-docs"/name = "'$tfcWorkspaceName'"/' main.tf
          terraform init -input=false

      - name: Build and deploy preview environment
        id: build-deploy-preview-environment
        run: |
          terraform apply --auto-approve -var is_prod=${{ vars.IS_VERCEL_PROD }}

      - name: Terraform Output
        run: |
          terraform output
        continue-on-error: true

      - name: Get Preview URL
        id: get-preview-url
        run: |
          PREVIEW_URL=$(terraform output -raw preview_url)
          echo Preview environment deployed at: $PREVIEW_URL
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Create comment with Terraform output
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Preview Environment Deployed ðŸ–Œ

            Visit the preview at: ${{ steps.get-preview-url.outputs.preview-url }}
            `
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
